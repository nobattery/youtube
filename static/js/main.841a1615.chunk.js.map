{"version":3,"sources":["components/video_list/video_list.module.css","components/video_item/video_item.module.css","components/search_header/search_header.module.css","App.module.css","components/search_header/search_header.jsx","components/video_detail/video_detail.jsx","components/video_item/video_item.jsx","components/video_list/video_list.jsx","App.jsx","service/youtube.js","index.js","components/video_detail/video_detail.module.css"],"names":["module","exports","SearchHeader","memo","onSearch","mostPopular","inputRef","useRef","handleSearch","value","current","className","styles","header","logo","icon","onClick","title","ref","input","type","placeholder","onKeyPress","event","key","button","buttonImg","src","alt","VideoDetail","video","snippet","detail","width","height","id","frameborder","allowfullscreen","channelTitle","description","VideoItem","onVideoClick","display","displayType","list","grid","detailListType","container","thumbnail","thumbnails","medium","url","metadata","channel","VideoList","videos","map","App","youtube","useState","setVideos","selectedVideo","setSelectedVideo","search","useCallback","query","then","useEffect","app","content","Youtube","httpClient","this","a","get","params","part","chart","maxResults","response","data","items","q","axios","create","baseURL","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.841a1615.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"videos\":\"video_list_videos__361tj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_item_container__2SrFn\",\"grid\":\"video_item_grid__2UKMH\",\"list\":\"video_item_list__3nQqQ\",\"video\":\"video_item_video__1sRiM\",\"row\":\"video_item_row__2DQy5\",\"column\":\"video_item_column__3Ciz3\",\"thumbnail\":\"video_item_thumbnail__10-m9\",\"metadata\":\"video_item_metadata__2E7ey\",\"title\":\"video_item_title__VFG_6\",\"channel\":\"video_item_channel__2UHnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"search_header_header__140K_\",\"icon\":\"search_header_icon__2EiBJ\",\"logo\":\"search_header_logo__QFhuM\",\"title\":\"search_header_title__mBpAo\",\"input\":\"search_header_input__2221s\",\"button\":\"search_header_button__3XZiv\",\"buttonImg\":\"search_header_buttonImg__35snO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2KNYc\",\"content\":\"App_content__4BJ8_\",\"detail\":\"App_detail__bHPg3\",\"list\":\"App_list__IYkOD\"};","import React, { memo, useRef } from \"react\";\r\nimport styles from \"./search_header.module.css\";\r\n\r\n//<img className={styles.image} src=\"/images/logo.png\" alt=\"logo\" />\r\nconst SearchHeader = memo(({ onSearch, mostPopular }) => {\r\n  // ! useRef -> <input> ref = {} 꼭 정의해주기 !\r\n  const inputRef = useRef();\r\n  const handleSearch = () => {\r\n    const value = inputRef.current.value;\r\n    if (value !== \"\") {\r\n      onSearch(value);\r\n    } else {\r\n      mostPopular();\r\n    }\r\n  };\r\n\r\n  const onHomeClick = () => {\r\n    handleSearch();\r\n  };\r\n\r\n  const onClick = () => {\r\n    handleSearch();\r\n  };\r\n  const onKeypress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSearch();\r\n    }\r\n  };\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.logo}>\r\n        <button className={styles.icon} onClick={onHomeClick}>\r\n          <i className=\"fab fa-youtube\"></i>\r\n        </button>\r\n        <h1 className={styles.title}>Youtube</h1>\r\n      </div>\r\n      <input\r\n        ref={inputRef}\r\n        className={styles.input}\r\n        type=\"Search\"\r\n        placeholder=\"Search...\"\r\n        onKeyPress={onKeypress}\r\n      />\r\n      <button className={styles.button} type=\"submit\" onClick={onClick}>\r\n        <img\r\n          className={styles.buttonImg}\r\n          src=\"/images/search.png\"\r\n          alt=\"search\"\r\n        />\r\n      </button>\r\n    </header>\r\n  );\r\n});\r\n\r\nexport default SearchHeader;\r\n","import React from \"react\";\r\nimport styles from \"./video_detail.module.css\";\r\n\r\n//Detail : iFrame이 보여야한다.\r\n//https://developers.google.com/youtube/youtube_player_demo\r\n//IFrame Embed Code : https://www.youtube.com/embed/{ID}\r\nconst VideoDetail = ({ video, video: { snippet } }) => (\r\n  <section className={styles.detail}>\r\n    <iframe\r\n      className={styles.video}\r\n      type=\"text/html\"\r\n      title=\"youtube video player\"\r\n      width=\"100%\"\r\n      height=\"500px\"\r\n      src={`https://www.youtube.com/embed/${video.id}`}\r\n      frameborder=\"0\"\r\n      allowfullscreen\r\n    ></iframe>\r\n    <h2>{snippet.title}</h2>\r\n    <h3>{snippet.channelTitle}</h3>\r\n    <pre className={styles.description}>{snippet.description}</pre>\r\n  </section>\r\n);\r\n\r\nexport default VideoDetail;\r\n","import React, { memo } from \"react\";\nimport styles from \"./video_item.module.css\";\n\n//사용할 데이터의 위치는 PostMan에서 Request -> Response 항목에서 확인 가능하다.\n//thumbnail Image Source : Response-Items-snippet-thumbnail-medium-url(img)\n//props.video.snippet.(   ) : 반복사용 되는 부분. (props) 대신 ({video : {snippet}}) 사용시 단축 가능\n//CSS : PostCSS로 구현\n//VideoList에서 전달받은 onVideoClick을 onClick event로 video 전달\nconst VideoItem = memo(\n  ({ video, video: { snippet }, onVideoClick, display }) => {\n    const displayType = display === \"list\" ? styles.list : styles.grid;\n    const detailListType = display === \"list\" ? styles.list : styles.grid;\n    return (\n      <li\n        className={`${styles.container} ${displayType}`}\n        onClick={() => onVideoClick(video)}\n      >\n        <div className={`${styles.video} ${detailListType}`}>\n          <img\n            className={styles.thumbnail}\n            src={snippet.thumbnails.medium.url}\n            alt=\"video thumbnail\"\n          />\n          <div className={styles.metadata}>\n            <p className={styles.title}>{snippet.title}</p>\n            <p className={styles.channel}>{snippet.channelTitle}</p>\n          </div>\n        </div>\n      </li>\n    );\n  }\n);\n\nexport default VideoItem;\n","import React from \"react\";\nimport VideoItem from \"../video_item/video_item\";\nimport styles from \"./video_list.module.css\";\n\n//Video Item에 Video List를 전달\n//key : PostMan - Response - Item마다 고유한 동영상 id\n//문제 발견) 하루 API 할당량을 넘어가면 이곳에서 TYPE 에러가 뜬다. KEY를 2개 사용할 필요가 있다.\n\n//App [videos, onVideoClick] => VideoList [onVideoClick] => VideoItem\nconst VideoList = ({ videos, onVideoClick, display }) => (\n  <ul className={styles.videos}>\n    {videos.map((video) => (\n      <VideoItem\n        key={video.id}\n        video={video}\n        onVideoClick={onVideoClick}\n        display={display}\n      />\n    ))}\n  </ul>\n);\n\nexport default VideoList;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport SearchHeader from \"./components/search_header/search_header\";\nimport VideoDetail from \"./components/video_detail/video_detail\";\nimport VideoList from \"./components/video_list/video_list\";\n\n//key를 다른 파일에 옮겼고, App에서는 직접 Request하지않고, 따로 선언한 API를 사용.\nfunction App({ youtube }) {\n  //useState(초기값) : 초기값 선언 주의! 에러 발생 가능\n  const [videos, setVideos] = useState([]);\n  //Select a Video  -> Remember Selected Video -> Show Video Details\n  const [selectedVideo, setSelectedVideo] = useState(null); //초기값 null\n\n  const selectVideo = (video) => {\n    setSelectedVideo(video);\n  };\n\n  //Header Re-render를 방지하기위해 useCallback 사용.\n  //메모리에 영향을 주기 때문에 usecallback 사용주의! 자식 컴포넌트에 props를 전달할 때 위주로 사용.\n  const search = useCallback(\n    (query) => {\n      youtube\n        .search(query) //\n        .then((videos) => {\n          setVideos(videos);\n          //Videos가 검색됐다면 다시 null로 지정(다시 video 검색하면 목록으로 이동하기 위함)\n          setSelectedVideo(null);\n        });\n    },\n    [youtube]\n  );\n  const mostPopular = () => {\n    youtube\n      .mostPopular() //\n      .then((videos) => setVideos(videos));\n    setSelectedVideo(null);\n  };\n  useEffect(() => {\n    youtube\n      .mostPopular() //\n      .then((videos) => setVideos(videos));\n  }, [youtube]);\n\n  return (\n    <div className={styles.app}>\n      <SearchHeader onSearch={search} mostPopular={mostPopular} />\n      <section className={styles.content}>\n        {/**SelectedVideo가 있다면 div를 보여주고, SideVideo가 한줄에 하나씩 나오도록 해준다.*/}\n        {selectedVideo && (\n          <div className={styles.detail}>\n            <VideoDetail video={selectedVideo} />\n          </div>\n        )}\n        <div className={styles.list}>\n          <VideoList\n            videos={videos}\n            onVideoClick={selectVideo}\n            display={selectedVideo ? \"list\" : \"grid\"}\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","//네트워크 부분 App -> Youtube Class(new) - mostPopular, search API 제공\r\n//에러 처리를 삭제한 이유 : 서비스 API를 소비하는 쪽(컴포넌트 쪽)에서 에러 처리하는 편이 좋기 때문.\r\n// fetch -> axios로 변환\r\nclass Youtube {\r\n  //this.key : .env 파일에 정의\r\n  constructor(httpClient) {\r\n    this.youtube = httpClient;\r\n  }\r\n\r\n  //Youtube Most Popular API Request\r\n  async mostPopular() {\r\n    //Json 변환 생략, 가독성 증가, 이전 브라우저 지원 가능\r\n    const response = await this.youtube.get(\"videos\", {\r\n      params: {\r\n        part: \"snippet\",\r\n        chart: \"mostPopular\",\r\n        maxResults: 25,\r\n      },\r\n    });\r\n    return response.data.items;\r\n  }\r\n\r\n  //Youtube Search API Request\r\n  async search(query) {\r\n    const response = await this.youtube.get(\"search\", {\r\n      params: {\r\n        part: \"snippet\",\r\n        maxResults: 25,\r\n        type: \"video\",\r\n        q: query,\r\n      },\r\n    });\r\n    return response.data.items;\r\n  }\r\n}\r\n\r\nexport default Youtube;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Youtube from \"./service/youtube\";\nimport axios from \"axios\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\n\n//point ! index.js 호출시 한번만 Youtube class가 생성되도록 한다.\n//API Key : .env 파일에 정의, git에 올라가지 않도록 .gitignore에 .env 추가했다.\nconst httpClient = axios.create({\n  baseURL: \"https://youtube.googleapis.com/youtube/v3\",\n  params: { key: process.env.REACT_APP_YOUTUBE_API_KEY },\n});\n\nconst youtube = new Youtube(httpClient);\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"video_detail_detail__30O1v\",\"description\":\"video_detail_description__dROGo\"};"],"sourceRoot":""}